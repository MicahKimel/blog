@{
    ViewData["Title"] = "Inquiry";
}
<br />
<h1 class="title is-1 py-1" style="color: white">@ViewData["Title"]</h1>

<h2 class="title is-3 py-1" style="color: white">@ViewData["Name"]</h1>

    <p class="pb-1" style="color: white">@ViewData["Description"]</p>

    <form method="post" class="row g-3 needs-validation" action="/Home/Inquiry" novalidate>
        <div class="col-md-4 position-relative">
            <label for="FirstName" class="form-label">First name</label>
            <input type="text" class="form-control" id="FirstName" name="FirstName" value="" required>
            <div class="valid-tooltip">
                Looks good!
            </div>
            <div class="invalid-tooltip">
                Please enter a First Name.
            </div>
        </div>
        <div class="col-md-4 position-relative">
            <label for="LastName" class="form-label">Last name</label>
            <input type="text" class="form-control" id="LastName" name="LastName" value="" required>
            <div class="valid-tooltip">
                Looks good!
            </div>
            <div class="invalid-tooltip">
                Please enter a Last Name.
            </div>
        </div>
        <div class="col-md-4 position-relative">
            <label for="Email" class="form-label">Email</label>
            <div class="input-group has-validation">
                <input type="email" class="form-control" id="Email" name="Email" aria-describedby="email" required>
                <div class="invalid-tooltip">
                    Please enter a email.
                </div>
            </div>
        </div>
        <div data-mdb-input-init class="form-outline mb-3" style="width: 100%; max-width: 22rem">
            <label for="Phone">Phone Number:</label><br />
            <input class="form-control" id="Phone" name="Phone" required>
            <label class="form-label" for="Phone">Phone number</label>
            <div class="invalid-tooltip">
                Please enter a phone.
            </div>
        </div>
        <p>Tell us up to three important things to you and your family when you're planning a dream experience in a new
            place!
            Are you a foodie who loves to spend time trying every unique dish and delicacy from a new place?
            Do you love adventuring up and down mountain peaks or rafting down rivers, chasing thrills?
            Do you value time in restful, peaceful spaces getting to soak in the sounds and colors of an unexplored
            area?
            Tell us and our team of locals will dream up a package that will satisfy your hearts and your wallets in the
            beautiful Himalayas.
        </p>
        <div class="col-12">
            <textarea class="textarea form-control" id="TextArea" name="TextArea" placeholder="10 lines of textarea"
                rows="10"></textarea>
        </div>
        <p>
            Inquiry
        </p>
        <div class="col-12">
            <textarea class="textarea form-control" id="Inquiry" name="Inquiry" placeholder="10 lines of textarea"
                rows="10"></textarea>
        </div>
        <div class="col-12">
            <button class="btn btn-primary" type="submit">Submit form</button>
        </div>
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
    </form>
    @{
        if (ViewBag.Posted == "True")
        {
            <script type="text/javascript">
                alert("Inquiry Success!");
            </script>
        }
    }
    <script>
        const inputElement = document.getElementById("Phone");
        inputElement.addEventListener("input", () => {
            document.getElementById("Phone").value = (applyPatternOnNumbers(document.getElementById("Phone").value, "(###) (###) (####)", "#"));
        });

        function applyPatternOnNumbers(input, pattern, replacementCharacter) {
            var pureNumber = input.replace(/[^0-9]/g, '').slice(0, 10);

            let formattedNumber = '';
            for (let i = 0; i < pattern.length; i++) {
                if (pattern[i] !== replacementCharacter) {
                    pureNumber = insertCharacter(pureNumber, pattern[i], i);
                }
            }
            return pureNumber;
        }

        function insertCharacter(str, char, index) {
            return str.slice(0, index) + char + str.slice(index);
        }

        (() => {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            const forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
        })()
    </script>